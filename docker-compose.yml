x-app: &app
  build:
    context: watercrawl
    dockerfile: Dockerfile
    args:
      - WATER_CRAWL_BACKEND_IMAGE
  environment:
    # Django settings
    - SECRET_KEY=w4SrKvKyIaTLZAiN1huSpUzhIvt3WsvRBYPpDFe3U
    - DEBUG=True
    - ALLOWED_HOSTS=${DOMAIN}
    - LANGUAGE_CODE=en-us
    - TIME_ZONE=UTC
    - USE_I18N=True
    - USE_TZ=True

    # Database
    - DATABASE_URL=postgresql://postgres:MuOywo94wkOoVVUz@postgres:5432/postgres

    # JWT settings
    - ACCESS_TOKEN_LIFETIME_MINUTES=5
    - REFRESH_TOKEN_LIFETIME_DAYS=30

    # Celery settings
    - CELERY_BROKER_URL=redis://redis:6379/0
    - CELERY_RESULT_BACKEND=django-db

    # Enterprise mode
    - IS_ENTERPRISE_MODE_ACTIVE=False

    - STATICFILES_STORAGE=django.contrib.staticfiles.storage.StaticFilesStorage
    # STATICFILES_STORAGE=django_minio_backend.models.MinioBackendStatic
    - DEFAULT_FILE_STORAGE=django.core.files.storage.FileSystemStorage
    # DEFAULT_FILE_STORAGE=django_minio_backend.models.MinioBackend

    # MinIO settings
    # MINIO_ENDPOINT=minio:9000
    # MINIO_EXTERNAL_ENDPOINT=localhost:9000
    # MINIO_EXTERNAL_ENDPOINT_USE_HTTPS=False
    # MINIO_REGION=
    # MINIO_ACCESS_KEY=your_minio_access_key_here
    # MINIO_SECRET_KEY=your_minio_secret_key_here
    # MINIO_USE_HTTPS=False
    # MINIO_URL_EXPIRY_HOURS=7
    # MINIO_CONSISTENCY_CHECK_ON_START=False
    # MINIO_PRIVATE_BUCKET=private
    # MINIO_PUBLIC_BUCKET=public
    # MINIO_BUCKET_CHECK_ON_SAVE=True

    # CORS settings
    - CSRF_TRUSTED_ORIGINS=${PROTOCOL}://${DOMAIN}
    - CORS_ALLOWED_ORIGINS=${PROTOCOL}://${DOMAIN}
    - CORS_ALLOWED_ORIGIN_REGEXES=
    - CORS_ALLOW_ALL_ORIGINS=False

    # Plugins
    # WATER_CRAWL_PLUGINS=watercrawl_openai.OpenAIPlugin

    # OpenAI
    # OPENAI_API_KEY=your_openai_api_key_here

    # Scrapy settings
    - SCRAPY_USER_AGENT="WaterCrawl/0.1 (+https://github.com/watercrawl/watercrawl)"
    - SCRAPY_ROBOTSTXT_OBEY=True
    - SCRAPY_CONCURRENT_REQUESTS=32
    - SCRAPY_DOWNLOAD_DELAY=0
    - SCRAPY_CONCURRENT_REQUESTS_PER_DOMAIN=16
    - SCRAPY_CONCURRENT_REQUESTS_PER_IP=16
    - SCRAPY_COOKIES_ENABLED=False
    - SCRAPY_HTTPCACHE_ENABLED=True
    - SCRAPY_HTTPCACHE_EXPIRATION_SECS=3600
    - SCRAPY_HTTPCACHE_DIR=httpcache
    - SCRAPY_LOG_LEVEL=ERROR

    # Login and registration settings
    - IS_LOGIN_ACTIVE=True
    - IS_SIGNUP_ACTIVE=True
    - IS_GITHUB_LOGIN_ACTIVE=False
    - IS_GOOGLE_LOGIN_ACTIVE=False

    # GOOGLE_CLIENT_ID=
    # GOOGLE_CLIENT_SECRET=

    # GITHUB_CLIENT_ID=
    # GITHUB_CLIENT_SECRET=

    # EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
    # EMAIL_HOST=localhost
    # EMAIL_PORT=2525
    # EMAIL_USE_TLS=False
    # EMAIL_HOST_USER=
    # EMAIL_HOST_PASSWORD=
    # DEFAULT_FROM_EMAIL=info@example.com

    - PLAYWRIGHT_SERVER=http://playwright:8000
    - PLAYWRIGHT_API_KEY=VQSexeRRoc2L6ChBzuc2oqfiX78IZfrb
  volumes:
    - storage_volume:/var/www/storage
  depends_on:
    - postgres
    # - minio
    
services:
  app:
    <<: *app
    restart: always
    networks:
      - dokploy-network
    command: gunicorn -b 0.0.0.0:9000 -w 2 watercrawl.wsgi:application --access-logfile - --error-logfile - --timeout 3600
    
  celery:
    <<: *app
    restart: always
    command: celery -A watercrawl worker -B -l info --statedb=.celery/worker.state
    networks:
      - dokploy-network

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        - WATER_CRAWL_FRONTEND_IMAGE
    restart: always
    environment:
      - VITE_API_URL=${PROTOCOL}://${DOMAIN}
    networks:
      - dokploy-network

  nginx:
    image: ${NEGINX_IMAGE:-nginx:1.25-alpine}
    restart: always
    ports:
      - "80"
    volumes:
      - ./nginx:/etc/nginx/conf.d:ro
      - storage_volume:/var/www/storage
    networks:
      - dokploy-network
    depends_on:
      - frontend
      - app

  # minio:
  #   image: {MINIO_IMAGE:-minio/minio:RELEASE.2024-11-07T00-52-20Z}
  #   restart: always
  #   volumes:
  #     - minio-data:/data
  #   command: server /data --console-address ":9001"
  #   env_file:
  #     - minio.env
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9001/minio/health/live"]
  #     interval: 30s
  #     timeout: 20s
  #   networks:
  #     - dokploy-network

  postgres:
    image: ${POSTGRES_IMAGE:-postgres:17.2-alpine3.21}
    restart: always
    environment:
      - POSTGRES_PASSWORD=MuOywo94wkOoVVUz
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
    networks:
      - dokploy-network

  playwright:
    image: ${PLAYWRIGHT_IMAGE:-watercrawl/playwright:1.1}
    restart: always
    environment:
      - AUTH_API_KEY=VQSexeRRoc2L6ChBzuc2oqfiX78IZfrb
      - PORT=8000
      - HOST=0.0.0.0
    networks:
      - dokploy-network

  redis:
    image: ${REDIS_IMAGE:-redis:7.2-alpine}
    restart: always
    volumes:
      - redis-data:/data
    networks:
      - dokploy-network

volumes:
  postgres-db:
  # minio-data:
  storage_volume:
  redis-data:

networks:
  dokploy-network:
    external: true
